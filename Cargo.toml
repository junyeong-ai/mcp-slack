[package]
name = "mcp-slack"
version = "0.1.0"
edition = "2024"
rust-version = "1.90"
authors = ["MCP Slack Server Contributors"]
description = "A Rust-based MCP server for Slack integration with intelligent caching"
license = "MIT"
repository = "https://github.com/yourusername/slack-mcp-server"

[dependencies]
# Async runtime
tokio = { version = "1.47", features = ["full"] }

# Serialization
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
serde_urlencoded = "0.7"

# HTTP client
reqwest = { version = "0.12", features = ["json", "rustls-tls", "multipart"] }

# Logging
tracing = "0.1"
tracing-subscriber = { version = "0.3", features = ["env-filter", "json"] }

# Error handling
anyhow = "1.0"
thiserror = "2.0"

# Rate limiting
governor = "0.8"

# Fuzzy search
fuzzy-matcher = "0.3"

# Time handling
chrono = { version = "0.4", features = ["serde"] }
chrono-english = "0.1"  # Natural language date parsing ("tomorrow at 3pm", "next monday")

# Configuration
config = "0.14"
dotenv = "0.15"

# CLI arguments
clap = { version = "4.5.48", features = ["derive", "env"] }

# UUID generation
uuid = { version = "1.11", features = ["v4", "serde"] }

# Async traits
async-trait = "0.1"

# JSON-RPC
jsonrpc-core = "18.0"
jsonrpc-stdio-server = "18.0"

# SQLite with advanced features
rusqlite = { version = "0.32", features = ["bundled", "chrono", "serde_json"] }
r2d2 = "0.8"
r2d2_sqlite = "0.25"

[dev-dependencies]
# Async testing (already have tokio in dependencies, add test-util feature)
tokio = { version = "1.47", features = ["full", "test-util"] }

# HTTP mocking
wiremock = "0.6"

# Trait/struct mocking
mockall = "0.13"

# Enhanced assertions
pretty_assertions = "1.4"

# Fixture-based testing
rstest = "0.26"

# Fake data generation
fake = { version = "4.4", features = ["derive"] }

[features]
default = []

[profile.release]
opt-level = 3
lto = true
codegen-units = 1
strip = true

[profile.dev]
opt-level = 0
debug = true